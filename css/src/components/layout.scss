@use 'sass:math';

$quarter-widescreen: math.div($breakpoint-widescreen, 4);
$half-widescreen: math.div($breakpoint-widescreen, 2);
$three-quarters-widescreen: math.div($breakpoint-widescreen, 4) * 3;

:root {
	--window-inner-height: 100vh; // to be overwritten by JS
	--atlas-header-height: 0px; // to be overwritten by JS
	--atlas-footer-height: 0px; // to be overwritten by JS
	--atlas-contained-height: 1fr; // default value, does not contain the height
}

.layout {
	display: flex;
	flex-direction: column;
	max-inline-size: 100vw;

	// --layout-gutter by default, see tokens/layout.scss
	#{$layout-gap-custom-property-name}: $layout-gap;
	#{$layout-gap-scalable-custom-property-name}: $layout-gap;

	@include widescreen {
		#{$layout-gap-scalable-custom-property-name}: $layout-widescreen-gap;
	}
}

.layout-padding {
	padding-inline: var(#{$layout-gap-custom-property-name}) !important;
}

.layout-margin {
	margin-inline: var(#{$layout-gap-scalable-custom-property-name}) !important;
}

.layout-body {
	display: grid;
	width: 100%;
	max-width: 100%;
}

// grid-area values

.layout-body-header {
	grid-area: header;
}

.layout-body-hero {
	grid-area: hero;
}

.layout-body-menu {
	grid-area: menu;
}

.layout-body-main {
	grid-area: main;
}

.layout-body-aside {
	grid-area: aside;
}

.layout-body-footer {
	grid-area: footer;
}

.layout-body-hero,
.layout-body-main,
.layout-body-footer,
.layout-body-aside,
.layout-body-menu {
	&:empty {
		display: none;
	}
}

.layout,
.layout.layout-single {
	.layout-body {
		grid-template: auto auto auto 1fr auto auto / minmax(0, 1fr);
		grid-template-areas: 'header' 'hero' 'menu' 'main' 'aside' 'footer';
	}
}

.layout.layout-holy-grail {
	.layout-body {
		grid-template: auto auto auto 1fr auto auto / minmax(0, 1fr);
		grid-template-areas: 'header' 'hero' 'menu' 'main' 'aside' 'footer';

		@include tablet {
			grid-template: auto auto var(--atlas-contained-height) auto auto / minmax(0, 1fr) minmax(
					0,
					2fr
				);
			grid-template-areas:
				'header header'
				'hero hero'
				'menu main'
				'menu aside'
				'footer footer';
		}

		@include desktop {
			grid-template: auto auto var(--atlas-contained-height) auto / minmax(0, 1fr) minmax(0, 2fr) minmax(
					0,
					1fr
				);
			grid-template-areas:
				'header header header'
				'hero hero hero'
				'menu main aside'
				'footer footer footer';
		}

		@include widescreen {
			grid-template: auto auto var(--atlas-contained-height) auto / auto #{$quarter-widescreen} #{$half-widescreen} #{$quarter-widescreen} auto;
			grid-template-areas:
				'header header header header header'
				'hero hero hero hero hero'
				'. menu main aside .'
				'footer footer footer footer footer';
		}
	}
}

.layout.layout-sidecar-left {
	.layout-body-aside {
		display: none;
	}

	.layout-body {
		grid-template: auto auto auto 1fr auto / minmax(0, 1fr);
		grid-template-areas: 'header' 'hero' 'menu' 'main' 'footer';

		@include tablet {
			grid-template: auto auto var(--atlas-contained-height) auto / minmax(0, 1fr) minmax(0, 2fr);
			grid-template-areas:
				'header header'
				'hero hero'
				'menu main'
				'footer footer';
		}

		@include desktop {
			grid-template: auto auto var(--atlas-contained-height) auto / minmax(0, 1fr) minmax(0, 3fr);
			grid-template-areas:
				'header header'
				'hero hero'
				'menu main'
				'footer footer';
		}

		@include widescreen {
			grid-template: auto auto var(--atlas-contained-height) auto / auto #{$quarter-widescreen} #{$three-quarters-widescreen} auto;
			grid-template-areas:
				'header header header header'
				'hero hero hero hero'
				'. menu main .'
				'footer footer footer footer';
		}
	}
}

.layout.layout-sidecar-right {
	.layout-body-menu {
		display: none;
	}

	.layout-body {
		grid-template: auto auto auto 1fr auto / minmax(0, 1fr);
		grid-template-areas: 'header' 'hero' 'main' 'aside' 'footer';

		@include tablet {
			grid-template: auto auto var(--atlas-contained-height) auto / minmax(0, 2fr) minmax(0, 1fr);
			grid-template-areas:
				'header header'
				'hero hero'
				'main aside '
				'footer footer';
		}

		@include desktop {
			grid-template: auto auto var(--atlas-contained-height) auto / minmax(0, 3fr) minmax(0, 1fr);
			grid-template-areas:
				'header header'
				'hero hero'
				'main aside'
				'footer footer';
		}

		@include widescreen {
			grid-template: auto auto var(--atlas-contained-height) auto / auto #{$three-quarters-widescreen} #{$quarter-widescreen} auto;
			grid-template-areas:
				'header header header header'
				'hero hero hero hero'
				'. main aside .'
				'footer footer footer footer';
		}
	}
}

.layout.layout-twin {
	.layout-body-menu {
		display: none;
	}

	.layout-body {
		grid-template: auto auto auto 1fr auto / minmax(0, 1fr);
		grid-template-areas: 'header' 'hero' 'main' 'aside' 'footer';

		// note that to make some extra room this layout is not constrained by the widescreen breakpoint like others
		@include tablet {
			grid-template: auto auto var(--atlas-contained-height) auto / minmax(0, 1fr) minmax(0, 1fr);
			grid-template-areas:
				'header header'
				'hero hero'
				'main aside '
				'footer footer';
		}
	}
}

@mixin constrained-layout-child {
	position: sticky;
	inset-block-start: 0;
	overflow-x: hidden;
	overflow-y: auto;
	-webkit-overflow-scrolling: touch;
}

@include tablet {
	.layout.layout-constrained {
		&.layout-twin,
		&.layout-sidecar-left,
		&.layout-sidecar-right {
			// ðŸ‘‡ minus two pixel at the end to account for percentage points and rounding, one px generally suffices though
			--atlas-contained-height: calc(
				var(--window-inner-height) - var(--atlas-header-height) - var(--atlas-footer-height) - 2px
			);
		}

		&.layout-twin,
		&.layout-sidecar-right {
			.layout-body-main,
			.layout-body-aside {
				@include constrained-layout-child;
			}
		}

		&.layout-sidecar-left {
			.layout-body-menu,
			.layout-body-main {
				@include constrained-layout-child;
			}
		}
	}
}

// Because the holy grail has two rows (containing menu main, menu aside) on tablet, we cannot apply height constraints at that size
@include desktop {
	.layout.layout-constrained.layout-holy-grail {
		// ðŸ‘‡ minus two pixel at the end to account for percentage points and rounding, one px generally suffices though
		--atlas-contained-height: calc(
			var(--window-inner-height) - var(--atlas-header-height) - var(--atlas-footer-height) - 2px
		);

		.layout-body-main,
		.layout-body-menu,
		.layout-body-aside {
			@include constrained-layout-child;
		}
	}
}
