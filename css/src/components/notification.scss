$notification-min-height: 50px !default;
$notification-background: $secondary-background !default;
$notification-padding-block: 0.75em !default;
$notification-padding-inline: 0.85em !default;
$notification-gap: $spacer-3 !default;

$notification-icon-size: 1.145em !default;
$notification-icon-block-spacing: 0.35em !default;

$notification-content-block-spacing: 0.3em !default;

$notification-color: $text !default;
$notification-font-size: $font-size-8 !default;

$notification-button-font-size: $font-size-9 !default;

$notification-border-color: $control-border !default;
$notification-border-width: $border-width !default;
$notification-border-radius: $border-radius !default;

.notification {
	display: grid;
	position: relative;
	align-items: flex-start;
	min-height: $notification-min-height;
	border: $notification-border-width solid $notification-border-color;
	border-radius: $notification-border-radius;
	outline-color: $text;
	background-color: $notification-background;
	color: $notification-color;
	font-size: $notification-font-size;
	line-height: $line-height-normal;
	padding-inline: $notification-padding-inline;
	padding-block: $notification-padding-block;
	grid-template: auto / auto 1fr auto;
	grid-template-areas: 'icon notification-content dismiss';
	word-wrap: break-word;
	word-break: break-word;

	@each $name, $color-set in $colors {
		$base: nth($color-set, $color-index-base);
		$dark: nth($color-set, $color-index-dark);
		$background: nth($color-set, $color-index-background);

		&.notification-#{$name} {
			border-color: $dark;
			background-color: $background;

			&.is-loading::before {
				border-color: transparent transparent $dark $dark;
			}

			.notification-icon {
				color: $dark;
			}
		}
	}

	&.is-loading {
		color: transparent;

		> :first-child {
			margin-inline-start: 1.75em;
		}

		&::before {
			@include loader;

			position: absolute;
			border-color: transparent transparent $notification-color $notification-color;
			font-size: $notification-icon-size;
			inset-block-start: calc($notification-padding-block + $notification-icon-block-spacing);
			inset-inline-start: $notification-padding-inline;
		}
	}

	.notification-content {
		grid-area: notification-content;

		.notification-title {
			font-weight: $weight-semibold;
			margin-inline-end: $notification-gap;
		}

		p:first-child {
			margin-block-start: $notification-content-block-spacing;
		}

		a:not(.button) {
			text-decoration: underline;

			&:hover {
				text-decoration-thickness: 0.15em;
			}
		}

		.button {
			font-size: $notification-button-font-size;
		}
	}

	.notification-icon {
		flex-shrink: 0;
		font-size: $notification-icon-size;
		line-height: 1;
		grid-area: icon;
		margin-inline-end: $notification-gap;
	}

	.notification-dismiss {
		@include dismiss-square;

		grid-area: dismiss;
		margin-inline-start: $notification-gap;
	}

	.notification-icon,
	.notification-dismiss {
		margin-block-start: $notification-icon-block-spacing;
	}
}
